{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel Auth API",
        "description": "Laravel Auth API documentation with Swagger",
        "contact": {
            "email": "admin@example.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:9191",
            "description": "Laravel Auth API"
        },
        {
            "url": "http://127.0.0.1:9191"
        }
    ],
    "paths": {
        "/api/admin/login": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Admin login",
                "operationId": "f3dc2e45e5fc2ee472d07f01f529af03",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    }
                }
            }
        },
        "/api/admin/logout": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Admin logout",
                "description": "Logout admin user and invalidate token",
                "operationId": "adminLogout",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        },
                                        "status": {
                                            "type": "number",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        },
                                        "status": {
                                            "type": "number",
                                            "example": 0
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout failed"
                                        },
                                        "status": {
                                            "type": "number",
                                            "example": 0
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/dashboard/transactions": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get transaction data",
                "description": "Get all transaction data for admin dashboard with pagination",
                "operationId": "getTransactions",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by transaction type or amount",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/login": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get Falaq token",
                "description": "Generate a base64 encoded token with nur muhammad abdul falaq prefix",
                "operationId": "getFalaqToken",
                "responses": {
                    "200": {
                        "description": "Token generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "WmFsYXFfMTcwOTg3NjU0Mw=="
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/deposit": {
            "get": {
                "tags": [
                    "Deposit"
                ],
                "summary": "Get current amount",
                "description": "Retrieve the current deposit amount",
                "operationId": "getAmount",
                "responses": {
                    "200": {
                        "description": "Amount retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "amount": {
                                            "type": "number",
                                            "example": 1000
                                        },
                                        "currency": {
                                            "type": "string",
                                            "example": "IDR"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Deposit"
                ],
                "summary": "Add amount",
                "description": "Add money to the deposit amount",
                "operationId": "addAmount",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "order_id",
                                    "amount",
                                    "timestamp"
                                ],
                                "properties": {
                                    "order_id": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "example": 1000
                                    },
                                    "timestamp": {
                                        "type": "string",
                                        "example": "2025-03-26 10:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Amount added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Amount added successfully"
                                        },
                                        "amount": {
                                            "type": "number",
                                            "example": 2000
                                        },
                                        "order_id": {
                                            "type": "string",
                                            "example": "1234567890"
                                        },
                                        "status": {
                                            "type": "number",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/deposit/callback": {
            "post": {
                "tags": [
                    "Deposit"
                ],
                "summary": "Midtrans payment callback",
                "description": "Handle Midtrans payment notification",
                "operationId": "handleCallback",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "transaction_status",
                                    "order_id",
                                    "status_code",
                                    "gross_amount",
                                    "signature_key"
                                ],
                                "properties": {
                                    "transaction_status": {
                                        "type": "string",
                                        "example": "settlement"
                                    },
                                    "order_id": {
                                        "type": "string",
                                        "example": "INV/20250327/1234"
                                    },
                                    "status_code": {
                                        "type": "string",
                                        "example": "200"
                                    },
                                    "gross_amount": {
                                        "type": "string",
                                        "example": "100000.00"
                                    },
                                    "signature_key": {
                                        "type": "string",
                                        "example": "fe5f8ff281c4e3e65c1c4a7e2f48052579c3f0d9b64e44c87e2d9f2741149407622d13d1f8f27519500930dff9344367db064b01dacc31c9d0787cd0219c3825"
                                    },
                                    "payment_type": {
                                        "type": "string",
                                        "example": "bank_transfer"
                                    },
                                    "transaction_time": {
                                        "type": "string",
                                        "example": "2025-03-27 08:19:32"
                                    },
                                    "transaction_id": {
                                        "type": "string",
                                        "example": "9aed5972-5b6a-401d-950c-05f39184e8d3"
                                    },
                                    "status_message": {
                                        "type": "string",
                                        "example": "Success"
                                    },
                                    "merchant_id": {
                                        "type": "string",
                                        "example": "G12345678"
                                    },
                                    "fraud_status": {
                                        "type": "string",
                                        "enum": [
                                            "accept",
                                            "deny",
                                            "challenge"
                                        ],
                                        "example": "accept"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Notification processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment notification processed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid signature key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid signature key"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to process payment notification"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/deposit/generate-order-id": {
            "get": {
                "tags": [
                    "Deposit"
                ],
                "summary": "Generate order ID",
                "description": "Generate a unique order ID",
                "operationId": "generateOrderId",
                "responses": {
                    "200": {
                        "description": "Order ID generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order ID generated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "order_id": {
                                                    "type": "string",
                                                    "example": "INV/20250327/1234"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to generate order ID"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/deposit/transaction-status/{order_id}": {
            "get": {
                "tags": [
                    "Deposit"
                ],
                "summary": "Check transaction status",
                "description": "Check transaction status from Midtrans",
                "operationId": "getTransactionStatus",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "INV-20250327081932-5894"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction status retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "transaction_status": {
                                                    "type": "string",
                                                    "example": "settlement"
                                                },
                                                "payment_type": {
                                                    "type": "string",
                                                    "example": "bank_transfer"
                                                },
                                                "order_id": {
                                                    "type": "string",
                                                    "example": "INV-20250327081932-5894"
                                                },
                                                "gross_amount": {
                                                    "type": "string",
                                                    "example": "100000.00"
                                                },
                                                "transaction_time": {
                                                    "type": "string",
                                                    "example": "2025-03-27 08:19:32"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/transaction": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction history",
                "description": "Get deposit and withdrawal transaction history with time filter",
                "operationId": "transactionHistory",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Transaction type (deposit/withdrawal)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "deposit",
                                "withdrawal"
                            ]
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Time filter (day/month/year)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "day",
                                "month",
                                "year"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success get transaction history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "amount": {
                                                        "type": "number"
                                                    },
                                                    "transaction_date": {
                                                        "type": "string",
                                                        "format": "datetime"
                                                    },
                                                    "status": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/withdrawal": {
            "post": {
                "tags": [
                    "Withdrawal"
                ],
                "summary": "Withdrawal amount",
                "description": "Withdrawal amount from the deposit",
                "operationId": "withdrawalAmount",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "example": 1000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Amount added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Amount added successfully"
                                        },
                                        "amount": {
                                            "type": "number",
                                            "example": 2000
                                        },
                                        "new_amount": {
                                            "type": "number",
                                            "example": 1000
                                        },
                                        "status": {
                                            "type": "number",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Admin",
            "description": "Admin"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Deposit",
            "description": "Deposit"
        },
        {
            "name": "Transaction",
            "description": "Transaction"
        },
        {
            "name": "Withdrawal",
            "description": "Withdrawal"
        }
    ]
}